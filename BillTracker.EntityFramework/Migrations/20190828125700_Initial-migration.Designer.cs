// <auto-generated />
using System;
using BillTracker.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BillTracker.EntityFramework.Migrations
{
    [DbContext(typeof(BillTrackerContext))]
    [Migration("20190828125700_Initial-migration")]
    partial class Initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BillTracker.Model.AccountBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Bank")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateModification");

                    b.Property<string>("NameAccount");

                    b.Property<string>("NumberAccount")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AccountBank");
                });

            modelBuilder.Entity("BillTracker.Model.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("BillDate");

                    b.Property<string>("BillNumber")
                        .IsRequired();

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateModification");

                    b.Property<string>("Description");

                    b.Property<decimal>("Itbis");

                    b.Property<decimal>("TotalAmount");

                    b.HasKey("Id");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("BillTracker.Model.BillItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<long?>("BillId");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateModification");

                    b.Property<string>("Description");

                    b.Property<decimal>("Itbis");

                    b.Property<decimal>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("BillTracker.Model.EspenseCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateModification");

                    b.Property<int?>("DayOfWeekIncome");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("ExpenseCategoryId");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("State");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.ToTable("EspenseCalendar");
                });

            modelBuilder.Entity("BillTracker.Model.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<long?>("BillId");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateModification");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ExpenseCreateDate");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("BillTracker.Model.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateModification");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategory");
                });

            modelBuilder.Entity("BillTracker.Model.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountBankId");

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateModification");

                    b.Property<string>("Description");

                    b.Property<DateTime>("IncomeCreateDate");

                    b.HasKey("Id");

                    b.HasIndex("AccountBankId");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("BillTracker.Model.IncomeCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountBankId");

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime?>("DateModification");

                    b.Property<int?>("DayOfWeekIncome");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("IncomeType")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("State");

                    b.HasKey("Id");

                    b.HasIndex("AccountBankId");

                    b.ToTable("IncomeCalendar");
                });

            modelBuilder.Entity("BillTracker.Model.BillItems", b =>
                {
                    b.HasOne("BillTracker.Model.Bill")
                        .WithMany("BillItems")
                        .HasForeignKey("BillId");
                });

            modelBuilder.Entity("BillTracker.Model.EspenseCalendar", b =>
                {
                    b.HasOne("BillTracker.Model.ExpenseCategory", "ExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BillTracker.Model.Expense", b =>
                {
                    b.HasOne("BillTracker.Model.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId");
                });

            modelBuilder.Entity("BillTracker.Model.Income", b =>
                {
                    b.HasOne("BillTracker.Model.AccountBank", "AccountBank")
                        .WithMany()
                        .HasForeignKey("AccountBankId");
                });

            modelBuilder.Entity("BillTracker.Model.IncomeCalendar", b =>
                {
                    b.HasOne("BillTracker.Model.AccountBank", "AccountBank")
                        .WithMany()
                        .HasForeignKey("AccountBankId");
                });
#pragma warning restore 612, 618
        }
    }
}
